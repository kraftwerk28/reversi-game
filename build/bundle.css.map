{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Disc.svelte",
    "Field.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { swapTrn, STATE } from './utils';\n\n  export let color;\n</script>\n\n<style>\n  .root {\n    display: block;\n    position: relative;\n    width: 3em;\n    height: 3em;\n    background: green;\n    cursor: pointer;\n  }\n  .disc {\n    width: 2em;\n    height: 2em;\n    position: absolute;\n    border-radius: 1em;\n    top: 0.5em;\n    left: 0.5em;\n    box-sizing: border-box;\n  }\n  .w {\n    background: white;\n  }\n  .b {\n    background: black;\n  }\n</style>\n\n<div class=\"root\" on:click>\n  {#if color === STATE.BLACK}\n    <div class=\"disc b\" transition:swapTrn />\n  {/if}\n\n  {#if color === STATE.WHITE}\n    <div class=\"disc w\" transition:swapTrn />\n  {/if}\n</div>\n\n",
    "<script>\n  import Disc from './Disc.svelte';\n  import {\n    initGame,\n    getPossibleMoves,\n    STATE,\n    xy2i,\n    ALLOW_BORDER,\n    DENY_BORDER,\n  } from './utils';\n\n  let state = initGame();\n  $: possibleMoves = getPossibleMoves(state);\n\n  function setDisc(i) {\n    const rowToFlip = possibleMoves.get(i);\n    if (!rowToFlip) {\n      return;\n    }\n    state.board[i] = state.move;\n    for (const i of rowToFlip) {\n      state.board[i] = state.move;\n    }\n\n    state.move = state.move === STATE.BLACK ? STATE.WHITE : STATE.BLACK;\n    state.board = state.board.slice();\n  }\n\n  let fieldNode;\n  $: fieldBounds = fieldNode?.getBoundingClientRect();\n  const markerState = { color: 0 };\n  let markerStyle = '';\n  $: iswhite = state.move === STATE.WHITE;\n  $: {\n    if (fieldBounds) {\n      const { x, y, color } = markerState;\n      markerStyle = `\n        left: ${(x / 8) * (fieldBounds.width - 14) + x * 2}px;\n        top: ${(y / 8) * (fieldBounds.height - 14) + y * 2}px;\n        border: ${\n          color === 0 ? 'transparent' : color === 1 ? DENY_BORDER : ALLOW_BORDER\n        };\n      `;\n    }\n  }\n\n  function onMouseMove(evt) {\n    const { left, top, width, height } = fieldBounds;\n    const { clientX, clientY } = evt;\n    const [x, y] = [\n      (((clientX - left) / width) * 8) | 0,\n      (((clientY - top) / height) * 8) | 0,\n    ];\n    markerState.color = possibleMoves.has(xy2i(x, y)) ? 2 : 1;\n    if (x === markerState.x && y === markerState.y) {\n      return;\n    }\n    markerState.x = x;\n    markerState.y = y;\n  }\n  function onMouseLeave() {\n    markerState.color = 0;\n  }\n</script>\n\n<style>\n  .field-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n  .field-root {\n    position: relative;\n    display: grid;\n    grid-template-columns: repeat(8, auto);\n    justify-content: center;\n    grid-gap: 2px;\n  }\n  .marker {\n    width: 3em;\n    height: 3em;\n    position: absolute;\n    box-sizing: border-box;\n    transition: left 0.2s, top 0.2s, border-color 0.2s;\n    pointer-events: none;\n  }\n  .iswhite {\n    transform: scaleX(-1);\n  }\n  .game-status span {\n    transition: transform 0.2s;\n    font-size: 3em;\n    display: inline-block;\n  }\n</style>\n\n<div class=\"field-container\">\n  <div class=\"game-status\">\n    <span>&#x1F31A</span>\n    <span class:iswhite>&#x1F448</span>\n    <span>&#x1F31D</span>\n    <span>&nbsp;</span>\n    <span>&#x26AA</span>\n    <span>x{64 - state.board.filter((c) => c > 0).length}</span>\n  </div>\n  <div\n    class=\"field-root\"\n    bind:this={fieldNode}\n    on:mousemove={onMouseMove}\n    on:mouseleave={onMouseLeave}>\n    {#each state.board as item, i}\n      <Disc on:click={() => setDisc(i)} color={item} />\n    {/each}\n    <div class=\"marker\" style={markerStyle} />\n  </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAOE,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,KAAK,CACd,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,OAAO,AACjB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,QAAQ,CAAE,QAAQ,CAClB,aAAa,CAAE,GAAG,CAClB,GAAG,CAAE,KAAK,CACV,IAAI,CAAE,KAAK,CACX,UAAU,CAAE,UAAU,AACxB,CAAC,AACD,EAAE,eAAC,CAAC,AACF,UAAU,CAAE,KAAK,AACnB,CAAC,AACD,EAAE,eAAC,CAAC,AACF,UAAU,CAAE,KAAK,AACnB,CAAC;ACqCD,gBAAgB,4BAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,WAAW,4BAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CACtC,eAAe,CAAE,MAAM,CACvB,QAAQ,CAAE,GAAG,AACf,CAAC,AACD,OAAO,4BAAC,CAAC,AACP,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,QAAQ,CAAE,QAAQ,CAClB,UAAU,CAAE,UAAU,CACtB,UAAU,CAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI,CAClD,cAAc,CAAE,IAAI,AACtB,CAAC,AACD,QAAQ,4BAAC,CAAC,AACR,SAAS,CAAE,OAAO,EAAE,CAAC,AACvB,CAAC,AACD,0BAAY,CAAC,IAAI,cAAC,CAAC,AACjB,UAAU,CAAE,SAAS,CAAC,IAAI,CAC1B,SAAS,CAAE,GAAG,CACd,OAAO,CAAE,YAAY,AACvB,CAAC"
}